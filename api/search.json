[{"id":"f969552e8d5b4e6b9b0df6e3c58e38f5","title":"sumtwonum","content":"方法一: 暴力枚举\n\n\n\n\n\nTIP\n思路及算法\n最容易想到的方法是枚举数组中的每一个数 x，寻找数组中是否存在 target - x。\n当我们使用遍历整个数组的方式寻找 target - x 时，需要注意到每一个位于 x 之前的元素都已经和 x 匹配过，因此不需要再进行匹配。而每一个元素不能被使用两次，所以我们只需要在 x 后面的元素中寻找 target - x。\n\n\nClick to see code\nfunc twoSum(nums []int, target int) []int &#123;\n    for i, x := range nums &#123;\n        for j := i + 1; j &lt; len(nums); j++ &#123;\n            if x+nums[j] == target &#123;\n                return []int&#123;i, j&#125;\n            &#125;\n        &#125;\n    &#125;\n    return nil\n&#125;\n:::复杂度分析\n时间复杂度：O(N^2)O(N2 )，其中 NN 是数组中的元素数量。最坏情况下数组中任意两个数都要被匹配一次。\n空间复杂度：O(1)O(1)。\n方法二：哈希表:::tip思路及算法\n注意到方法一的时间复杂度较高的原因是寻找 target - x 的时间复杂度过高。因此，我们需要一种更优秀的方法，能够快速寻找数组中是否存在目标元素。如果存在，我们需要找出它的索引。\n使用哈希表，可以将寻找 target - x 的时间复杂度降低到从 O(N)O(N) 降低到 O(1)O(1)。\n这样我们创建一个哈希表，对于每一个 x，我们首先查询哈希表中是否存在 target - x，然后将 x 插入到哈希表中，即可保证不会让 x 和自己匹配。\n\n\nClick to see code\nfunc twoSum(nums []int, target int) []int &#123;\n    hashTable := map[int]int&#123;&#125;\n    for i, x := range nums &#123;\n        if p, ok := hashTable[target-x]; ok &#123;\n            return []int&#123;p, i&#125;\n        &#125;\n        hashTable[x] = i\n    &#125;\n    return nil\n&#125;\n::::::tip复杂度分析\n时间复杂度：O(N)O(N)，其中 NN 是数组中的元素数量。对于每一个元素 x，我们可以 O(1)O(1) 地寻找 target - x。\n空间复杂度：O(N)O(N)，其中 NN 是数组中的元素数量。主要为哈希表的开销。\n\n","slug":"sumtwonum","date":"2022-01-21T05:34:57.000Z","categories_index":"algorithm","tags_index":"哈希表","author_index":"ArcticTime"},{"id":"ea2df330bdc4d3b0275544f615da7198","title":"gomail基本用法","content":"GoMail基本用法\nClick to see code\n&#x2F;&#x2F; Example\n\nm :&#x3D; gomail.NewMessage()\nm.SetHeader(&quot;From&quot;, &quot;alex@example.com&quot;)\nm.SetHeader(&quot;To&quot;, &quot;bob@example.com&quot;, &quot;cora@example.com&quot;)\nm.SetAddressHeader(&quot;Cc&quot;, &quot;dan@example.com&quot;, &quot;Dan&quot;)\nm.SetHeader(&quot;Subject&quot;, &quot;Hello!&quot;)\nm.SetBody(&quot;text&#x2F;html&quot;, &quot;Hello &lt;b&gt;Bob&lt;&#x2F;b&gt; and &lt;i&gt;Cora&lt;&#x2F;i&gt;!&quot;)\nm.Attach(&quot;&#x2F;home&#x2F;Alex&#x2F;lolcat.jpg&quot;)\n\nd :&#x3D; gomail.NewDialer(&quot;smtp.example.com&quot;, 587, &quot;user&quot;, &quot;123456&quot;)\n\n&#x2F;&#x2F; Send the email to Bob, Cora and Dan.\nif err :&#x3D; d.DialAndSend(m); err !&#x3D; nil &#123;\n\tpanic(err)\n&#125;\n\n\n&#x2F;&#x2F; NoAuth\n\nm :&#x3D; gomail.NewMessage()\nm.SetHeader(&quot;From&quot;, &quot;from@example.com&quot;)\nm.SetHeader(&quot;To&quot;, &quot;to@example.com&quot;)\nm.SetHeader(&quot;Subject&quot;, &quot;Hello!&quot;)\nm.SetBody(&quot;text&#x2F;plain&quot;, &quot;Hello!&quot;)\n\nd :&#x3D; gomail.Dialer&#123;Host: &quot;localhost&quot;, Port: 587&#125;\nif err :&#x3D; d.DialAndSend(m); err !&#x3D; nil &#123;\n\tpanic(err)\n&#125;\n\n\n","slug":"gomail","date":"2022-01-21T03:50:45.000Z","categories_index":"golang","tags_index":"email","author_index":"ArcticTime"},{"id":"f0a9f68103bafda08057b264814a6ae9","title":"图片转字符","content":"usage: python pic2str.py xxx.jpg\nClick to see code\n# coding:utf-8  \n\n#  为一张图片生成对应的字符集图片  \n\nimport Image  \nimport argparse  \n\n# 命令行输入参数处理  \nparser = argparse.ArgumentParser()  \n\nparser.add_argument('file')     # 输入文件  \nparser.add_argument('-o', '--output')   # 输出文件  \nparser.add_argument('--width', type=int, default=140) # 输出字符画宽  \nparser.add_argument('--height', type=int, default=90) # 输出字符画高  \n\n# 获取参数  \nargs = parser.parse_args()  \n\nIMG = args.file  \nWIDTH = args.width  \nHEIGHT = args.height  \nOUTPUT = args.output  \n\nascii_char = list(\"$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;>i!lI;:,\\\"^`'. \")  \n\n\n# 将256灰度映射到70个字符上  \ndef get_char(r, b, g, alpha=256):  \n    if alpha == 0:  \n        return ' '  \n    length = len(ascii_char)  \n    gray = int(0.2126 * r + 0.7152 * g + 0.0722 * b)  \n\n    unit = (256.0 + 1)/length  \n    return ascii_char[int(gray/unit)]  \n\nif __name__ == '__main__':  \n\n    im = Image.open(IMG)  \n    im = im.resize((WIDTH, HEIGHT), Image.NEAREST)  \n\n    txt = \"\"  \n\n    for i in range(HEIGHT):  \n        for j in range(WIDTH):  \n            txt += get_char(*im.getpixel((j, i)))  \n        txt += '\\n'  \n\n    print txt  \n\n    # 字符画输出到文件  \n    if OUTPUT:  \n        with open(OUTPUT,'w') as f:  \n            f.write(txt)  \n    else:  \n        with open(\"output.txt\", 'w') as f:  \n            f.write(txt) \n\n\n\n","slug":"pic2str","date":"2020-08-15T10:49:36.000Z","categories_index":"python","tags_index":"tools","author_index":"ArcticTime"}]