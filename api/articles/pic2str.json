{"title":"图片转字符","uid":"f0a9f68103bafda08057b264814a6ae9","slug":"pic2str","date":"2017-08-15T10:49:36.000Z","updated":"2022-01-24T02:47:03.464Z","comments":true,"path":"api/articles/pic2str.json","keywords":"博客","cover":null,"content":"<h3 id=\"usage-python-pic2str-py-xxx-jpg\"><a href=\"#usage-python-pic2str-py-xxx-jpg\" class=\"headerlink\" title=\"usage: python pic2str.py xxx.jpg\"></a>usage: python pic2str.py xxx.jpg</h3><details class=\"custom-details\">\n<summary>Click to see code</summary>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding:utf-8  </span>\n\n<span class=\"token comment\">#  为一张图片生成对应的字符集图片  </span>\n\n<span class=\"token keyword\">import</span> Image  \n<span class=\"token keyword\">import</span> argparse  \n\n<span class=\"token comment\"># 命令行输入参数处理  </span>\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 输入文件  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--output'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出文件  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--width'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">140</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出字符画宽  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--height'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出字符画高  </span>\n\n<span class=\"token comment\"># 获取参数  </span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\nIMG <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span>  \nWIDTH <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>width  \nHEIGHT <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>height  \nOUTPUT <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>output  \n\nascii_char <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;>i!lI;:,\\\"^`'. \"</span><span class=\"token punctuation\">)</span>  \n\n\n<span class=\"token comment\"># 将256灰度映射到70个字符上  </span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_char</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token keyword\">if</span> alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">return</span> <span class=\"token string\">' '</span>  \n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_char<span class=\"token punctuation\">)</span>  \n    gray <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2126</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.7152</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.0722</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span>  \n\n    unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">256.0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>length  \n    <span class=\"token keyword\">return</span> ascii_char<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gray<span class=\"token operator\">/</span>unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  \n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>  \n\n    im <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>IMG<span class=\"token punctuation\">)</span>  \n    im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">,</span> HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Image<span class=\"token punctuation\">.</span>NEAREST<span class=\"token punctuation\">)</span>  \n\n    txt <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>  \n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n            txt <span class=\"token operator\">+=</span> get_char<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n        txt <span class=\"token operator\">+=</span> <span class=\"token string\">'\\n'</span>  \n\n    <span class=\"token keyword\">print</span> txt  \n\n    <span class=\"token comment\"># 字符画输出到文件  </span>\n    <span class=\"token keyword\">if</span> OUTPUT<span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>OUTPUT<span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>  \n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span>  \n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>  \n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n","feature":true,"text":"usage: python pic2str.py xxx.jpg Click to see code # coding:utf-8 # 为一张图片生成对应的字符集图片 import Image import argparse # 命令行输入参数处理 parser = argpar...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":1,"path":"api/categories/python.json"}],"tags":[{"name":"tools","slug":"tools","count":1,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#usage-python-pic2str-py-xxx-jpg\"><span class=\"toc-text\">usage: python pic2str.py xxx.jpg</span></a></li></ol>","author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"gomail基本用法","uid":"ea2df330bdc4d3b0275544f615da7198","slug":"gomail","date":"2019-03-11T03:50:45.000Z","updated":"2022-01-21T05:58:47.404Z","comments":true,"path":"api/articles/gomail.json","keywords":"博客","cover":null,"text":"GoMail基本用法 Click to see code // Example m := gomail.NewMessage() m.SetHeader(\"From\", \"alex@example.com\") m.SetHeader(\"To\", \"bob@example.com\"...","link":"","photos":[],"count_time":{"symbolsCount":833,"symbolsTime":"1 mins."},"categories":[{"name":"golang","slug":"golang","count":1,"path":"api/categories/golang.json"}],"tags":[{"name":"email","slug":"email","count":1,"path":"api/tags/email.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"中国象棋将帅问题","uid":"a44366009025b68a7362d7c10070d68f","slug":"chinchess","date":"2015-09-21T09:11:25.000Z","updated":"2022-01-25T10:31:15.095Z","comments":true,"path":"api/articles/chinchess.json","keywords":"博客","cover":[],"text":"下过中国象棋的朋友都知道，双方的“将”和“帅”相隔遥远，并且不能照面。在象棋残局中，许多高手能利用这一规则走出精妙的杀招。假设棋盘上只有“将”和“帅”二子（如图所示）（为了下面叙述方便，我们约定用A表示“将”, B表示“帅”）。A、B二子被限制在己方3×3的格子里运动。例如，在如...","link":"","photos":[],"count_time":{"symbolsCount":751,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"趣题","slug":"趣题","count":3,"path":"api/tags/趣题.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}