{"title":"图片转字符","uid":"f0a9f68103bafda08057b264814a6ae9","slug":"pic2str","date":"2017-08-15T10:49:36.000Z","updated":"2022-01-24T02:47:03.464Z","comments":true,"path":"api/articles/pic2str.json","keywords":"博客","cover":null,"content":"<h3 id=\"usage-python-pic2str-py-xxx-jpg\"><a href=\"#usage-python-pic2str-py-xxx-jpg\" class=\"headerlink\" title=\"usage: python pic2str.py xxx.jpg\"></a>usage: python pic2str.py xxx.jpg</h3><details class=\"custom-details\">\n<summary>Click to see code</summary>\n<p><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># coding:utf-8  </span>\n\n<span class=\"token comment\">#  为一张图片生成对应的字符集图片  </span>\n\n<span class=\"token keyword\">import</span> Image  \n<span class=\"token keyword\">import</span> argparse  \n\n<span class=\"token comment\"># 命令行输入参数处理  </span>\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 输入文件  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--output'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 输出文件  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--width'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">140</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出字符画宽  </span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--height'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出字符画高  </span>\n\n<span class=\"token comment\"># 获取参数  </span>\nargs <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\nIMG <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span>  \nWIDTH <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>width  \nHEIGHT <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>height  \nOUTPUT <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>output  \n\nascii_char <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;>i!lI;:,\\\"^`'. \"</span><span class=\"token punctuation\">)</span>  \n\n\n<span class=\"token comment\"># 将256灰度映射到70个字符上  </span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_char</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token keyword\">if</span> alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">return</span> <span class=\"token string\">' '</span>  \n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_char<span class=\"token punctuation\">)</span>  \n    gray <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2126</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.7152</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.0722</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span>  \n\n    unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">256.0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>length  \n    <span class=\"token keyword\">return</span> ascii_char<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gray<span class=\"token operator\">/</span>unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  \n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>  \n\n    im <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>IMG<span class=\"token punctuation\">)</span>  \n    im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">,</span> HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Image<span class=\"token punctuation\">.</span>NEAREST<span class=\"token punctuation\">)</span>  \n\n    txt <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>  \n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  \n            txt <span class=\"token operator\">+=</span> get_char<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  \n        txt <span class=\"token operator\">+=</span> <span class=\"token string\">'\\n'</span>  \n\n    <span class=\"token keyword\">print</span> txt  \n\n    <span class=\"token comment\"># 字符画输出到文件  </span>\n    <span class=\"token keyword\">if</span> OUTPUT<span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>OUTPUT<span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>  \n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span>  \n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>  \n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n","feature":true,"text":"usage: python pic2str.py xxx.jpg Click to see code # coding:utf-8 # 为一张图片生成对应的字符集图片 import Image import argparse # 命令行输入参数处理 parser = argpar...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":1,"path":"api/categories/python.json"}],"tags":[{"name":"tools","slug":"tools","count":1,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#usage-python-pic2str-py-xxx-jpg\"><span class=\"toc-text\">usage: python pic2str.py xxx.jpg</span></a></li></ol>","author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"简单记录下ssh隧道","uid":"ace00f99753694b20f6a827acf26990a","slug":"sshtunnel","date":"2017-09-25T03:19:06.000Z","updated":"2022-01-28T03:27:15.156Z","comments":true,"path":"api/articles/sshtunnel.json","keywords":"博客","cover":null,"text":" TIP 什么是隧道？在实际的网络中，通常会通过各种边界设备、软/硬件防火墙甚至入侵检测系统来检查对外连接情况，如果发现异样，就会对通信进行阻断。那么什么是隧道呢？这里的隧道，就是一种绕过端口屏蔽的通信方式。防火墙两端的数据包通过防火墙所允许的数据包类型或端口进行封装，然后穿过防...","link":"","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"ssh隧道","slug":"ssh隧道","count":1,"path":"api/tags/ssh隧道.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"快速找出故障机器","uid":"60ae5f459fdbd2a4d5acb3ac37fc6541","slug":"findbadmachine","date":"2016-09-26T03:33:26.000Z","updated":"2022-01-26T07:04:22.372Z","comments":true,"path":"api/articles/findbadmachine.json","keywords":"博客","cover":null,"text":"关心数据挖掘和搜索引擎的朋友都知道，我们需要很多的计算机来存储和处理海量数据。然而，计算机难免出现硬件故障而导致网络联系失败或死机。为了保证搜索引擎的服务质量，我们需要保证每份数据都有多个备份。 简单起见，我们假设一个机器仅储存一个标号为ID的记录（假设ID是小于10亿的整数），...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"趣题","slug":"趣题","count":3,"path":"api/tags/趣题.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}