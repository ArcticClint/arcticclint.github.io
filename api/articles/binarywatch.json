{"title":"二进制手表","uid":"85652d266055dc0d2acf418755863f57","slug":"binarywatch","date":"2021-06-21T10:19:04.000Z","updated":"2022-02-17T10:42:23.591Z","comments":true,"path":"api/articles/binarywatch.json","keywords":"博客","cover":"https://tse3-mm.cn.bing.net/th/id/OIP-C.qT_EvkLEA4EZn6O9MjFyHQHaHM?w=184&h=180&c=7&r=0&o=5&dpr=2&pid=1.7","content":"<p>二进制手表顶部有 4 个 LED 代表 小时（0-11），底部的 6 个 LED 代表 分钟（0-59）。每个 LED 代表一个 0 或 1，最低位在右侧。</p>\n<ul>\n<li>例如，下面的二进制手表读取 “3:25” 。<br><img src=\"https://tse3-mm.cn.bing.net/th/id/OIP-C.qT_EvkLEA4EZn6O9MjFyHQHaHM?w=184&h=180&c=7&r=0&o=5&dpr=2&pid=1.7\" alt=\"avatar\"></li>\n</ul>\n<p>给你一个整数 turnedOn ，表示当前亮着的 LED 的数量，返回二进制手表可以表示的所有可能时间。你可以 按任意顺序 返回答案。</p>\n<p>小时不会以零开头：</p>\n<ul>\n<li>例如，”01:00” 是无效的时间，正确的写法应该是 “1:00” 。</li>\n</ul>\n<p>分钟必须由两位数组成，可能会以零开头：</p>\n<ul>\n<li>例如，”10:2” 是无效的时间，正确的写法应该是 “10:02” 。\n </li>\n</ul>\n<h4 id=\"示例-1：\"><a href=\"#示例-1：\" class=\"headerlink\" title=\"示例 1：\"></a>示例 1：</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">输入：turnedOn &#x3D; 1\n输出：[&quot;0:01&quot;,&quot;0:02&quot;,&quot;0:04&quot;,&quot;0:08&quot;,&quot;0:16&quot;,&quot;0:32&quot;,&quot;1:00&quot;,&quot;2:00&quot;,&quot;4:00&quot;,&quot;8:00&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"示例-2：\"><a href=\"#示例-2：\" class=\"headerlink\" title=\"示例 2：\"></a>示例 2：</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">输入：turnedOn &#x3D; 9\n输出：[]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法一：枚举时分\"><a href=\"#方法一：枚举时分\" class=\"headerlink\" title=\"方法一：枚举时分\"></a>方法一：枚举时分</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>由题意可知，小时由 44 个比特表示，分钟由 66 个比特表示，比特位值为 00 表示灯灭，为 11 表示灯亮。</p>\n<p>我们可以枚举小时的所有可能值 [0,11]，以及分钟的所有可能值 [0,59]，并计算二者的二进制中 11 的个数之和，若为 <code>turnedOn</code>，则将其加入到答案中。</p>\n</div>\n<details class=\"custom-details\">\n<summary>Click to see code</summary>\n<p><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">readBinaryWatch</span><span class=\"token punctuation\">(</span>turnedOn <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ans <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> h <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> h <span class=\"token operator\">&lt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span> h<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> m <span class=\"token operator\">:=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span> m<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> bits<span class=\"token punctuation\">.</span><span class=\"token function\">OnesCount8</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>bits<span class=\"token punctuation\">.</span><span class=\"token function\">OnesCount8</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> turnedOn <span class=\"token punctuation\">&#123;</span>\n                ans <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d:%02d\"</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</p>\n</details>\n<h4 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h4><ul>\n<li>时间复杂度：O(1)。枚举的次数是一个与输入无关的定值。</li>\n<li>空间复杂度：O(1)。仅使用了常数大小的空间。注意返回值不计入空间复杂度。</li>\n</ul>\n","feature":true,"text":"二进制手表顶部有 4 个 LED 代表 小时（0-11），底部的 6 个 LED 代表 分钟（0-59）。每个 LED 代表一个 0 或 1，最低位在右侧。 例如，下面的二进制手表读取 “3:25” 。 给你一个整数 turnedOn ，表示当前亮着的 LED 的数量，返回二进制...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"algorithm","slug":"algorithm","count":6,"path":"api/categories/algorithm.json"}],"tags":[{"name":"回溯","slug":"回溯","count":1,"path":"api/tags/回溯.json"},{"name":"位运算","slug":"位运算","count":1,"path":"api/tags/位运算.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B-1%EF%BC%9A\"><span class=\"toc-text\">示例 1：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B-2%EF%BC%9A\"><span class=\"toc-text\">示例 2：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E6%9E%9A%E4%B8%BE%E6%97%B6%E5%88%86\"><span class=\"toc-text\">方法一：枚举时分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li></ol>","author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"无重复字符的最长子串","uid":"07c55e31248d72bce21e385abd54c291","slug":"strwithoutrepeatchar","date":"2021-04-20T07:44:37.000Z","updated":"2022-02-17T10:32:14.335Z","comments":true,"path":"api/articles/strwithoutrepeatchar.json","keywords":"博客","cover":"https://tse4-mm.cn.bing.net/th/id/OIP-C.4YsaATgDDoMrPcfvwg87uQHaE2?w=269&h=180&c=7&r=0&o=5&pid=1.7","text":"给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。 示例 1:输入: s &#x3D; &quot;abcabcbb&quot; 输出: 3 解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。 示例 2:输入: s &#x3...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"algorithm","slug":"algorithm","count":6,"path":"api/categories/algorithm.json"}],"tags":[{"name":"哈希表","slug":"哈希表","count":2,"path":"api/tags/哈希表.json"},{"name":"字符串","slug":"字符串","count":1,"path":"api/tags/字符串.json"},{"name":"滑动窗口","slug":"滑动窗口","count":1,"path":"api/tags/滑动窗口.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}