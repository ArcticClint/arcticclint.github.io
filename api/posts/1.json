{"total":10,"pageSize":12,"pageCount":1,"data":[{"title":"网络空间搜索引擎","uid":"0e6870079fdec95a13a2648b13457a77","slug":"cybersearchengine","date":"2019-10-28T08:46:58.000Z","updated":"2022-01-28T04:08:41.778Z","comments":true,"path":"api/articles/cybersearchengine.json","cover":[],"text":"简单介绍Shodanhttps://www.shodan.io/ Shodan 是全球第一个网络设备搜索引擎，发布于 2009 年 FOFAhttps://fofa.so/ FOFA 是白帽汇推出的一款网络空间搜索引擎，可以快速进行网络资产匹配 Quakehttps://quak...","link":"","photos":[],"count_time":{"symbolsCount":376,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"tools","slug":"tools","count":2,"path":"api/tags/tools.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"gomail基本用法","uid":"ea2df330bdc4d3b0275544f615da7198","slug":"gomail","date":"2019-03-11T03:50:45.000Z","updated":"2022-01-21T05:58:47.404Z","comments":true,"path":"api/articles/gomail.json","cover":null,"text":"GoMail基本用法 Click to see code // Example m := gomail.NewMessage() m.SetHeader(\"From\", \"alex@example.com\") m.SetHeader(\"To\", \"bob@example.com\"...","link":"","photos":[],"count_time":{"symbolsCount":833,"symbolsTime":"1 mins."},"categories":[{"name":"golang","slug":"golang","count":1,"path":"api/categories/golang.json"}],"tags":[{"name":"email","slug":"email","count":1,"path":"api/tags/email.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"简单记录下ssh隧道","uid":"ace00f99753694b20f6a827acf26990a","slug":"sshtunnel","date":"2017-09-25T03:19:06.000Z","updated":"2022-01-28T03:27:15.156Z","comments":true,"path":"api/articles/sshtunnel.json","cover":null,"text":" TIP 什么是隧道？在实际的网络中，通常会通过各种边界设备、软/硬件防火墙甚至入侵检测系统来检查对外连接情况，如果发现异样，就会对通信进行阻断。那么什么是隧道呢？这里的隧道，就是一种绕过端口屏蔽的通信方式。防火墙两端的数据包通过防火墙所允许的数据包类型或端口进行封装，然后穿过防...","link":"","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"ssh隧道","slug":"ssh隧道","count":1,"path":"api/tags/ssh隧道.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"图片转字符","uid":"f0a9f68103bafda08057b264814a6ae9","slug":"pic2str","date":"2017-08-15T10:49:36.000Z","updated":"2022-01-24T02:47:03.464Z","comments":true,"path":"api/articles/pic2str.json","cover":null,"text":"usage: python pic2str.py xxx.jpg Click to see code # coding:utf-8 # 为一张图片生成对应的字符集图片 import Image import argparse # 命令行输入参数处理 parser = argpar...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":1,"path":"api/categories/python.json"}],"tags":[{"name":"tools","slug":"tools","count":2,"path":"api/tags/tools.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"快速找出故障机器","uid":"60ae5f459fdbd2a4d5acb3ac37fc6541","slug":"findbadmachine","date":"2016-09-26T03:33:26.000Z","updated":"2022-01-26T07:04:22.372Z","comments":true,"path":"api/articles/findbadmachine.json","cover":null,"text":"关心数据挖掘和搜索引擎的朋友都知道，我们需要很多的计算机来存储和处理海量数据。然而，计算机难免出现硬件故障而导致网络联系失败或死机。为了保证搜索引擎的服务质量，我们需要保证每份数据都有多个备份。 简单起见，我们假设一个机器仅储存一个标号为ID的记录（假设ID是小于10亿的整数），...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"趣题","slug":"趣题","count":3,"path":"api/tags/趣题.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"中国象棋将帅问题","uid":"a44366009025b68a7362d7c10070d68f","slug":"chinchess","date":"2015-09-21T09:11:25.000Z","updated":"2022-01-25T10:31:15.095Z","comments":true,"path":"api/articles/chinchess.json","cover":[],"text":"下过中国象棋的朋友都知道，双方的“将”和“帅”相隔遥远，并且不能照面。在象棋残局中，许多高手能利用这一规则走出精妙的杀招。假设棋盘上只有“将”和“帅”二子（如图所示）（为了下面叙述方便，我们约定用A表示“将”, B表示“帅”）。A、B二子被限制在己方3×3的格子里运动。例如，在如...","link":"","photos":[],"count_time":{"symbolsCount":751,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"趣题","slug":"趣题","count":3,"path":"api/tags/趣题.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"三个灯泡--三个开关","uid":"ea3ce43666217b114197b9d0d5d2f463","slug":"switch","date":"2015-08-07T03:43:13.000Z","updated":"2022-01-24T03:45:47.146Z","comments":true,"path":"api/articles/switch.json","cover":null,"text":"房间里有三盏灯，屋外有三个开关，分别控制这三盏灯，只有进入房间，才能看到哪一个电灯是亮的。请问如何只进入房间一次，就能指明哪一个开关控制哪一个灯? ","link":"","photos":[],"count_time":{"symbolsCount":74,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"趣题","slug":"趣题","count":3,"path":"api/tags/趣题.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"无重复字符的最长子串","uid":"07c55e31248d72bce21e385abd54c291","slug":"strwithoutrepeatchar","date":"2015-04-20T07:44:37.000Z","updated":"2022-01-24T02:18:12.009Z","comments":true,"path":"api/articles/strwithoutrepeatchar.json","cover":null,"text":"给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。 示例 1:输入: s &#x3D; &quot;abcabcbb&quot; 输出: 3 解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。 示例 2:输入: s &#x3...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"algorithm","slug":"algorithm","count":3,"path":"api/categories/algorithm.json"}],"tags":[{"name":"哈希表","slug":"哈希表","count":2,"path":"api/tags/哈希表.json"},{"name":"字符串","slug":"字符串","count":1,"path":"api/tags/字符串.json"},{"name":"滑动窗口","slug":"滑动窗口","count":1,"path":"api/tags/滑动窗口.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"两数相加","uid":"b612343628098f07bb289a1a081127cf","slug":"addtwonum","date":"2015-02-11T06:27:27.000Z","updated":"2022-01-25T10:02:21.253Z","comments":true,"path":"api/articles/addtwonum.json","cover":[],"text":"给你两个非空的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储一位数字。 请你将两个数相加，并以相同形式返回一个表示和的链表。 你可以假设除了数字 0 之外，这两个数都不会以 0 开头。 示例 1： 输入：l1 &#x3D; [2,4,3]...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"algorithm","slug":"algorithm","count":3,"path":"api/categories/algorithm.json"}],"tags":[{"name":"递归","slug":"递归","count":1,"path":"api/tags/递归.json"},{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"两数之和","uid":"5d27f50fa4c0422c709b72db5e188a60","slug":"sumtwonum","date":"2015-01-21T05:34:57.000Z","updated":"2022-01-21T08:57:59.816Z","comments":true,"path":"api/articles/sumtwonum.json","cover":null,"text":"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 你可以按任意顺序返回答案。 示例 1：输入：num...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"algorithm","slug":"algorithm","count":3,"path":"api/categories/algorithm.json"}],"tags":[{"name":"哈希表","slug":"哈希表","count":2,"path":"api/tags/哈希表.json"}],"author":{"name":"ArcticTime","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/22902414?s=400&u=5ba620686e56ccff3fba9fffaadb3244bdc6de4d&v=4","link":"/","description":"当前目标是八块腹肌","socials":{"github":"https://github.com/ArcticClint","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}